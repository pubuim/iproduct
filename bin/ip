#!/usr/bin/env php
<?php
use Pagon\Cli;
use Pagon\Console;
use Pagon\Utility\ArgParser;

/** @var $app Pagon\App */
$app = include dirname(__DIR__) . '/app/bootstrap.php';
$app->buffer = false;

// Init database
$app->command('db\:init', 'Command\DB\Init');

/**
 * Route db commands to phpmig
 */
$app->command('db\::op', function ($req, $res) {
    chdir(APP_DIR);
    $args = $req->params['args'];
    $op = $req->params['op'];
    $dir = ' ';
    $boot = ' -b ' . APP_DIR . '/phpmig.php';

    switch ($op) {
        case 'generate':
            $dir = ' ' . APP_DIR . '/migrations';
            if (!$args) {
                Console::error('Need [name] to generate!');
                $res->end();
            }
            break;
        case 'init':
            Console::error('Can not use init here!');
            $res->end();
            break;
        default:
            if (false === array_search($op, array('up', 'down', 'check', 'migrate', 'rollback', 'status', 'up'))) {
                $boot = '';
            }
    }

    $command = ROOT_DIR . '/bin/phpmig ' . ($op != 'mig' ? $op : '') . $boot . $args . $dir;

    echo shell_exec($command);
});

/**
 * Handle 404 for help
 */
$app->handleError('404', function ($req, $res) {
    $parser = new ArgParser();
    $parser->add('task', array('help' => 'Task to run', 'enum' => array(
        'db:init'     => 'Init the database and table',
        'db:status'   => 'Show status of migrations',
        'db:migrate'  => 'Run all migrates',
        'db:generate' => 'Generate a new migration',
        'db:rollback' => 'Rollback last, or to a specific migration',
        'db:up'       => 'Run a specific migration',
        'db:down'     => 'Revert a specific migration',
        'db:list'     => 'List all command of db'
    )));
    echo $parser->help();
});

$app->run();